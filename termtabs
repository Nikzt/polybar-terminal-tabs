#!/bin/bash

. ~/.config/tabs.conf


function show_help {
	echo Usage:
	echo "  -t [TAB NUMBER]  ->  toggle tab defined by [TAB NUMBER] in config file"
	echo "  -i               ->  initialize file that keeps track of tabs"
}

function toggle_tab {
	term_app=${tabs[$tab_num,app]}
	icon=${tabs[$tab_num,icon]}
	x=$xoffset
	
	tdrop -a -w $width -h $height -x $x -y $yoffset -n $tab_num -f "-c $terminal -e bash -c 'bspc node -g sticky && $term_app'" $terminal &>/dev/null
	
	tval=$(update_tab_status)
	if [ $tval == 0 ]; then
		echo "%{F#666 B$t_closed_col} $tab_num%{F- B-}%{B$t_closed_col} $icon %{B-}"
	else
		echo "%{F#666 B$t_open_col} $tab_num%{F- B-}%{B$t_open_col} $icon %{B-}"
	fi
}

function update_tab_status {
	tabval=$(awk -v lnum="$tab_num" 'NR==lnum{ print $tab_num }' /dev/shm/polybar-tabs)
	
	if [ $tabval == 0 ]; then
		sed -i "${tab_num}s/./1/" /dev/shm/polybar-tabs
		tabval=1
	else
		sed -i "${tab_num}s/./0/" /dev/shm/polybar-tabs
		tabval=0
	fi
	echo $tabval

}

function init_tab {
	printf "0\n" > /dev/shm/polybar-tabs
	for i in `seq 2 $num_tabs`; 
	do
		printf "0\n" >> /dev/shm/polybar-tabs
	done
}

function close_tabs {
	num_tabs=$(wc -l < /dev/shm/polybar-tabs)
	og_tab_num=$tab_num
	for i in `seq 1 $num_tabs`;
	do
		isopen=$(awk -v lnum="$i" 'NR==lnum{ print $i }' /dev/shm/polybar-tabs)
		if [[ $i != $tab_num && $isopen == 1 ]]; then
			polybar-msg hook "tab$i" 3 &> /dev/null
			
		fi
	done
}

function generate_pbar_config {
	num_tabs=$(wc -l < /dev/shm/polybar-tabs)
	printf "! Polybar Terminal Tabs modules\n! Paste these into your polybar config\n\n" > pttabs_modules
	for i in `seq 1 $num_tabs`;
	do
		icon=${tabs[$i,icon]}
		init="%%{F#666 B$t_closed_col} $i%%{F- B-}%%{B$t_closed_col} $icon%%{B-}"
		printf "[module/tab$i]\ntype = custom/ipc\n" >> pttabs_modules	
		printf "hook-0 = termtabs -t $i\n" >> pttabs_modules	
		printf "hook-1 = echo \"$init\"\n" >> pttabs_modules
		printf "hook-2 = termtabs -c 5\n" >> pttabs_modules
		printf "click-left = polybar-msg hook tab5 1\n" >> pttabs_modules
		printf "initial = 2\n\n" >> pttabs_modules
	done
}


# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
output_file=""
verbose=0

while getopts "h?t:c:i:g" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    t)  tab_num=$OPTARG 
	toggle_tab
	close_tabs
        ;;
    c)  tab_num=$OPTARG
	toggle_tab
	;;
    i)  num_tabs=$OPTARG
	init_tab
        ;;
    g)  generate_pbar_config
	;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift


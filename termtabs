
#!/bin/bash

. tabs.conf

function show_help {
	echo Usage:
	echo "  -t [TAB NUMBER]  ->  toggle tab defined by [TAB NUMBER] in config file"
	echo "  -i               ->  initialize file that keeps track of tabs"
}

function toggle_tab {

	echo $tab_num
	term_app=${tabs[$tab_num]}
	icon=${tab_icons[$tab_num]}
	x=$xoffset
	
	tdrop -a -w $width -h $height -x $x -y $yoffset -n $tab_num -f "-c $terminal -e bash -c 'bspc node -g sticky && $term_app'" $terminal &>/dev/null &
	
	tval=$(update_tab_status)
	echo $tval
	if [ $tval == 0 ]; then
		echo "%{F#666 B#1e1e20} $tab_num%{F- B-}%{B#1e1e20} $icon %{B-}"
	else
		echo "%{F#666 B#2f2f34} $tab_num%{F- B-}%{B#2f2f34} $icon %{B-}"
	fi
}

function update_tab_status {
	linenum=$(expr $tab_num + 1)
	tabval=$(awk -v lnum="$linenum" 'NR==lnum{ print $linenum }' /dev/shm/polybar-tabs)
	
	if [ $tabval == 0 ]; then
		sed -i "${linenum}s/./1/" /dev/shm/polybar-tabs
		tabval=1
	else
		sed -i "${linenum}s/./0/" /dev/shm/polybar-tabs
		tabval=0
	fi
	echo $tabval

}

function init_tab {
	printf "0\n0\n0\n0\n0\n0\n" > /dev/shm/polybar-tabs
}

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
output_file=""
verbose=0

while getopts "h?t:i" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    t)  tab_num=$OPTARG
	toggle_tab
        ;;
    i)  init_tab
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

echo $tab_num
